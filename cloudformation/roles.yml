AWSTemplateFormatVersion: "2010-09-09"
Description: "Mozilla service-map roles"
Parameters:
  CodeDeployUserName:
    Description: Username for CodeDeploy IAM user
    Default: service-map-codedeploy
    Type: String
Resources:
  ServiceMapRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      RoleName: ServiceMapRole
  ServiceMapInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    DependsOn: ServiceMapRole
    Properties:
      InstanceProfileName: "service-map-instance-profile"
      Roles:
        - Ref: ServiceMapRole
  ServiceMapCredstashRead:
    Type: "AWS::IAM::Policy"
    DependsOn: ServiceMapRole
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:GetItem"
              - "dynamodb:Query"
              - "dynamodb:Scan"
            Resource: "arn:aws:dynamodb:*:*:table/credential-store"
      PolicyName: servicemap-credstash
      Roles:
        - Ref: ServiceMapRole
  ServiceMapTagAccess:
    Type: "AWS::IAM::Policy"
    DependsOn: ServiceMapRole
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:DescribeTags"
            Resource: "*"
      PolicyName: service-map-describe-tags
      Roles:
        - Ref: ServiceMapRole
  ServiceMapS3:
    Type: "AWS::IAM::Policy"
    DependsOn: ServiceMapRole
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:GetObject"
            Resource: "arn:aws:s3:::moz-service-map-*/*"
      PolicyName: service-map-s3
      Roles:
        - !Ref ServiceMapRole
  ServiceMapCodeDeploy:
    Type: "AWS::IAM::Policy"
    DependsOn: ServiceMapRole
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:*"
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:service-map-*"
      PolicyName: service-map-code-deploy
      Roles:
        - Ref: ServiceMapRole
  CodeDeployManaged:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: Permits Travis CI code deploy access for service-map
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:RegisterApplicationRevision"
              - "codedeploy:GetApplicationRevision"
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:service-map-*"
          - Effect: "Allow"
            Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetDeployment"
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:service-map-*"
          - Effect: "Allow"
            Action:
              - "codedeploy:GetDeploymentConfig"
            Resource:
              - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime"
              - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime"
              - !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce"
          - Effect: "Allow"
            Action:
              - "s3:PutObject"
            Resource:
              - "arn:aws:s3:::moz-service-map-*/*"
  CodeDeployUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: !Ref CodeDeployUserName
      ManagedPolicyArns:
        - Ref: CodeDeployManaged
